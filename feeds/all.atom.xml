<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pure Wild Animal Craziness</title><link href="http://chris.scutcher.uk/" rel="alternate"></link><link href="http://chris.scutcher.uk/feeds/all.atom.xml" rel="self"></link><id>http://chris.scutcher.uk/</id><updated>2017-07-19T17:04:56+01:00</updated><entry><title>Tips and Hints for Setting up NFSv4 with Kerberos with FreeIPA and FreeNAS</title><link href="http://chris.scutcher.uk/tips-and-hints-for-setting-up-nfsv4-with-kerberos-with-freeipa-and-freenas.html" rel="alternate"></link><published>2017-07-19T17:00:31+01:00</published><updated>2017-07-19T17:04:56+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2017-07-19:/tips-and-hints-for-setting-up-nfsv4-with-kerberos-with-freeipa-and-freenas.html</id><summary type="html">&lt;p&gt;I have a FreeIPA server setup in my homelab which provides Kerberos and identity
services.
It seems like overkill, and it probably is, but I wanted to be able to use &lt;span class="caps"&gt;NFS&lt;/span&gt;
which means that I need a way to keep user and groups in sync across my various
machines …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a FreeIPA server setup in my homelab which provides Kerberos and identity
services.
It seems like overkill, and it probably is, but I wanted to be able to use &lt;span class="caps"&gt;NFS&lt;/span&gt;
which means that I need a way to keep user and groups in sync across my various
machines and&amp;nbsp;VMs.&lt;/p&gt;
&lt;p&gt;This also allows me to use the krb5 support in NFSv4 allowing various security
improvements up to full encryption. From the man&amp;nbsp;page;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Specifying sec=krb5 provides cryptographic proof of a user&amp;#8217;s identity in each
&lt;span class="caps"&gt;RPC&lt;/span&gt; request.
This provides strong verification of the identity of users accessing data on
the server.
Note that additional configuration besides adding this mount option is
required in order  to  enable Kerberos security.
Refer to the rpc.gssd(8) man page for&amp;nbsp;details.&lt;/p&gt;
&lt;p&gt;Two additional flavors of Kerberos security are supported: krb5i and krb5p.
The krb5i security flavor provides a cryptographically strong guarantee that
the data in each &lt;span class="caps"&gt;RPC&lt;/span&gt; request has not been tampered with.
The krb5p security flavor encrypts every &lt;span class="caps"&gt;RPC&lt;/span&gt; request to prevent data exposure
during network transit; however, expect some performance impact when using
integrity checking or  encryption.
Similar support for other forms of cryptographic security is also&amp;nbsp;available.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My &lt;span class="caps"&gt;NAS&lt;/span&gt; box at the moment is running FreeNAS &lt;sup id="fnref-freenas-reserved"&gt;&lt;a class="footnote-ref" href="#fn-freenas-reserved"&gt;1&lt;/a&gt;&lt;/sup&gt;,
which is based on FreeBSD. For reasons I won&amp;#8217;t go into I needed to do a fresh
install of FreeNAS&amp;nbsp;11.&lt;/p&gt;
&lt;h1&gt;Pain&amp;nbsp;Points&lt;/h1&gt;
&lt;p&gt;Getting everything working has caused me a fair bit of pain. FreeIPA is a damn
sight easier to get going than setting up OpenLDAP and Kerberos manually, but
it still takes a while to get to grips with the many moving parts if you&amp;#8217;re
unfamiliar. While RedHat has some great high level documentation which applies
to RedHat and CentOS, I found documentation lacking in general for NFSv4,
Kerberos and &lt;span class="caps"&gt;IPA&lt;/span&gt;. FreeNAS&amp;#8217;s documentation too is a bit&amp;nbsp;lacking.&lt;/p&gt;
&lt;p&gt;Also I found it really difficult to get at useful debug information and logs
which made it difficult to&amp;nbsp;progress.&lt;/p&gt;
&lt;h1&gt;Useful info for fellow&amp;nbsp;travellers&lt;/h1&gt;
&lt;p&gt;Frankly, I&amp;#8217;m not entirely sure how I got everything working in the end, but I
did find a few little tips that might help others going along the same&amp;nbsp;path.&lt;/p&gt;
&lt;h3&gt;Setup everything with CentOS/Redhat only to start&amp;nbsp;with&lt;/h3&gt;
&lt;p&gt;I found it really useful to get a working setup using only CentOS for the client
and &lt;span class="caps"&gt;NFS&lt;/span&gt; server to start&amp;nbsp;with.&lt;/p&gt;
&lt;p&gt;The whole FreeIPA ecosystem is very &lt;span class="caps"&gt;RH&lt;/span&gt;/CentOS friendly and it&amp;#8217;s much easier to
get going. Everything&amp;#8217;s a little better &lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/"&gt;documented&lt;/a&gt; and a little more&amp;nbsp;reliable.&lt;/p&gt;
&lt;p&gt;When you&amp;#8217;ve got everything working like this it&amp;#8217;s easier to bring in FreeNAS or
clients based on other&amp;nbsp;distributions.&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;DNS&lt;/span&gt; is&amp;nbsp;important&lt;/h3&gt;
&lt;p&gt;Make sure that all clients and servers can resolve each other with both forward
and reverse &lt;span class="caps"&gt;DNS&lt;/span&gt;&amp;nbsp;lookups.&lt;/p&gt;
&lt;h3&gt;Time must be in&amp;nbsp;sync&lt;/h3&gt;
&lt;p&gt;Kerberos requires that time be in sync for everything involved.
Make sure everything is pointing at the &lt;span class="caps"&gt;NTP&lt;/span&gt; server on the FreeIPA&amp;nbsp;master.&lt;/p&gt;
&lt;h3&gt;Test&amp;nbsp;kinit&lt;/h3&gt;
&lt;p&gt;Make sure you can&amp;nbsp;do;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kinit user@IPA.DOMAIN
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on everything. If that doesn&amp;#8217;t work you&amp;#8217;re going to have a bad&amp;nbsp;time.&lt;/p&gt;
&lt;h3&gt;Enable more verbose logging for &lt;span class="caps"&gt;NFS&lt;/span&gt; on&amp;nbsp;Linux&lt;/h3&gt;
&lt;p&gt;This can be very useful when trying to understand why a &lt;span class="caps"&gt;NFS&lt;/span&gt; mount is&amp;nbsp;failing.&lt;/p&gt;
&lt;p&gt;Enable &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;debug;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Client&lt;/span&gt;
rpcdebug -m nfs -s all
&lt;span class="c1"&gt;# Server&lt;/span&gt;
rpcdebug -m nfsd -s all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Disable &lt;span class="caps"&gt;NFS&lt;/span&gt;&amp;nbsp;debug;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Client&lt;/span&gt;
rpcdebug -m nfs -c all
&lt;span class="c1"&gt;# Server&lt;/span&gt;
rpcdebug -m nfsd -c all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can never get useful information out of FreeNAS. It could be my unfamiliarity
with&amp;nbsp;FreeBSD.&lt;/p&gt;
&lt;h3&gt;Man&amp;nbsp;Pages&lt;/h3&gt;
&lt;p&gt;The man pages are some of the best documentation you&amp;#8217;ll&amp;nbsp;find.&lt;/p&gt;
&lt;p&gt;On&amp;nbsp;FreeNAS/FreeBSD;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;man nfsd
man gssd
man exports
man nfsv4
man nfsuserd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On&amp;nbsp;Linux;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;man nfs
man exports
man nfsd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Misc Useful Tips and&amp;nbsp;Links&lt;/h3&gt;
&lt;p&gt;Sorry this is not more organised, but hopefully it&amp;#8217;ll give clues to others
struggling with related&amp;nbsp;problems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On FreeNAS ensure &amp;#8220;Require Kerberos for NFSv4&amp;#8221; is checked. &lt;a href="https://github.com/freenas/middleware/blob/88136c0d8893c690ff00bbd076b9eb0616d86593/src/dispatcher/libexec/nfsd_wrapper"&gt;See&amp;nbsp;source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.idan400/kerlinx.htm"&gt;Useful debug information from &lt;span class="caps"&gt;IBM&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/NFSv4Howto"&gt;Useful debug information from&amp;nbsp;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stromberg.dnsalias.org/~strombrg/NFS-troubleshooting-2.html"&gt;Unread but promising troubleshooting&amp;nbsp;tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.linux-nfs.org/wiki/index.php/NFS_and_FreeIPA"&gt;&lt;span class="caps"&gt;NFS&lt;/span&gt; and&amp;nbsp;FreeIPA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nfs.sourceforge.net/"&gt;Linux &lt;span class="caps"&gt;NFS&lt;/span&gt; Official &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freeipa.org/page/Kerberos"&gt;Introduction to&amp;nbsp;Kerberos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/"&gt;Linux Domain Identity and Authentication and Policy&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freeipa.org/page/Troubleshooting"&gt;FreeIPA Troubleshooting&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-freenas-reserved"&gt;
&lt;p&gt;I&amp;#8217;ve been very happy with FreeNAS in the past, but I can&amp;#8217;t
really 100% recommend it today. If I was rebuilding my &lt;span class="caps"&gt;NAS&lt;/span&gt; box I&amp;#8217;d probably look
quite hard at the alternatives. It&amp;#8217;s still a really nice bit of software, but
it&amp;#8217;s got some downsides. In any case I&amp;#8217;m sorta stuck with it for the moment.&amp;#160;&lt;a class="footnote-backref" href="#fnref-freenas-reserved" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="notes"></category><category term="linux"></category><category term="freebsd"></category><category term="freenas"></category><category term="nfs"></category><category term="kerberos"></category></entry><entry><title>Using the Adafruit Bluetooth LE Sniffer with modern distro</title><link href="http://chris.scutcher.uk/using-the-adafruit-bluetooth-le-sniffer-with-modern-distro.html" rel="alternate"></link><published>2017-04-07T15:04:46+01:00</published><updated>2017-04-07T15:04:46+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2017-04-07:/using-the-adafruit-bluetooth-le-sniffer-with-modern-distro.html</id><summary type="html">&lt;p&gt;I&amp;#8217;m currently doing a lot of work with &lt;span class="caps"&gt;BLE&lt;/span&gt; and so was looking for ways to
analyse traffic on the wire. While wireshark can do sniffing with your standard
bluetooth dongle, it can only sniff traffic that the bluetooth controller is
directly involved with, and the indirection between bluetooth …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;m currently doing a lot of work with &lt;span class="caps"&gt;BLE&lt;/span&gt; and so was looking for ways to
analyse traffic on the wire. While wireshark can do sniffing with your standard
bluetooth dongle, it can only sniff traffic that the bluetooth controller is
directly involved with, and the indirection between bluetooth bluez, host and
controller, made me distinctly suspect that I wasn&amp;#8217;t seeing the complete picture
even&amp;nbsp;then.&lt;/p&gt;
&lt;p&gt;After some research I discovered
&lt;a href="https://www.adafruit.com/product/2269"&gt;this device from adafruit&lt;/a&gt;
which is capable of sniffing without being directly involved in the&amp;nbsp;dialogues.&lt;/p&gt;
&lt;p&gt;After getting hold of one however, I found that it&amp;#8217;s linux support on a modern
distros is shaky at best, mostly due to being built for older version of&amp;nbsp;wireshark.&lt;/p&gt;
&lt;p&gt;To help any other fellow travellers here&amp;#8217;s what I did to get it mostly&amp;nbsp;working.&lt;/p&gt;
&lt;h3&gt;Collecting the&amp;nbsp;traffic&lt;/h3&gt;
&lt;p&gt;To make the initial pcap trace clone &lt;a href="https://github.com/adafruit/Adafruit_BLESniffer_Python"&gt;this repo&lt;/a&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/adafruit/Adafruit_BLESniffer_Python.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The tool we&amp;#8217;re interested in is &lt;code&gt;sniffer.py&lt;/code&gt;.
To run this tool &lt;strong&gt;make sure you use python 2 and have pyserial installed&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Collect traffic from a particular address with a command like&amp;nbsp;this;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python2 sniffer.py -t AA:BB:CC:DD:EE:FF -l sniffed.pcap /dev/ttyUSB0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;AA:BB:CC:DD:EE:FF&lt;/code&gt; is the address of the device you want to sniff and
&lt;code&gt;/dev/ttyUSB0&lt;/code&gt; is the path to the serial device that appears when you plug the
&lt;span class="caps"&gt;BLE&lt;/span&gt; sniffer stick in. Look at &lt;code&gt;dmesg&lt;/code&gt; after plugging the stick in to find the&amp;nbsp;latter.&lt;/p&gt;
&lt;p&gt;This will output the sniffed packets to &lt;code&gt;sniffed.pcap&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Dissecting the traffic with&amp;nbsp;wireshark&lt;/h3&gt;
&lt;p&gt;This bit was slightly more awkward. Unfortunately modern wireshark
(I&amp;#8217;m using 2.2.5) doesn&amp;#8217;t have a dissector for the sniffed&amp;nbsp;packets.&lt;/p&gt;
&lt;p&gt;The repo above does contain some c implementations of a dissector but no
instructions on how to&amp;nbsp;build.&lt;/p&gt;
&lt;p&gt;I had a bit more luck with &lt;a href="https://github.com/ambrice/nordic_ble"&gt;this repo&lt;/a&gt;
which has some cmake for building and installing the dissector (although note
the path it installs to is &lt;code&gt;.wireshark/plugins&lt;/code&gt; when it should be
&lt;code&gt;.config/wireshark/plugins&lt;/code&gt;) but it became obvious that this dissector was
written for an older version of&amp;nbsp;Wireshark.&lt;/p&gt;
&lt;p&gt;What saved me was
&lt;a href="https://github.com/tewarid/wireshark-nordic-ble-lua"&gt;this repo with a lua implementation of the dissector&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Clone this to a sensible location and add the following to
&lt;code&gt;.config/wireshark/init.lua&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dofile(&amp;quot;/path/to/nordic_ble.lua&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you next open wireshark you should be able to read the pcap file generated
above and see a sensible&amp;nbsp;dissection.&lt;/p&gt;
&lt;h3&gt;Notes and&amp;nbsp;caveats&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve not been able to validate that the dissector or the sniffer produces
correct results yet.
The lua repo seems quite fresh, but there&amp;#8217;s no guarantee that it&amp;#8217;s
dissector implementation is as correct as the c reference&amp;nbsp;implementation.&lt;/p&gt;
&lt;p&gt;I didn&amp;#8217;t realise it at first but there also seems a reasonable python &lt;span class="caps"&gt;API&lt;/span&gt; in the
same repo as &lt;code&gt;sniffer.py&lt;/code&gt; (indeed the sniffer seems to exists just to
demonstrate this api). It looks pretty handy so I&amp;#8217;d like to get the chance to
play with that&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;There also seems to be some hint that the dissectors were eventually merged into
the main wireshark codebase but I can&amp;#8217;t find anything to confirm that.
Perhaps they were merged in under a different&amp;nbsp;name?&lt;/p&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adafruit.com/product/2269"&gt;Adafruit product&amp;nbsp;page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.adafruit.com/introducing-the-adafruit-bluefruit-le-sniffer"&gt;Adafruit docs on the&amp;nbsp;sniffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adafruit/Adafruit_BLESniffer_Python"&gt;Python &lt;span class="caps"&gt;API&lt;/span&gt; for Bluefruit &lt;span class="caps"&gt;LE&lt;/span&gt;&amp;nbsp;Sniffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ambrice/nordic_ble"&gt;C based wireshark dissectors with&amp;nbsp;Cmake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tewarid/wireshark-nordic-ble-lua"&gt;Lua wireshark&amp;nbsp;dissector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devzone.nordicsemi.com/blogs/750/ble-sniffer-in-linux-using-wireshark/"&gt;Docs from Nordic who make the sniffer&amp;nbsp;chip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devzone.nordicsemi.com/question/67447/wireshark-201-and-nrfsniffer/"&gt;Relevant question on nordic help&amp;nbsp;forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devzone.nordicsemi.com/question/79845/nrf-sniffer-support-for-wireshark-v203/"&gt;Another relevant question on nordic help&amp;nbsp;forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="notes"></category><category term="research"></category><category term="bluetooth"></category><category term="ble"></category></entry><entry><title>Research Spike on Docker Volume Permission</title><link href="http://chris.scutcher.uk/research-spike-on-docker-volume-permission.html" rel="alternate"></link><published>2016-09-21T17:19:52+01:00</published><updated>2016-09-23T16:31:16+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2016-09-21:/research-spike-on-docker-volume-permission.html</id><summary type="html">&lt;p&gt;I love Docker. Who doesn&amp;#8217;t! But it&amp;#8217;s got one issue that continue to bugs me, and
is always biting me in the&amp;nbsp;arse. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Docker Logo" src="http://chris.scutcher.uk/images/docker.svg"&gt;&lt;/p&gt;
&lt;p&gt;In many environments, such as on a dev box or a build slave, it can be useful to
use docker to wrap a build tool …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I love Docker. Who doesn&amp;#8217;t! But it&amp;#8217;s got one issue that continue to bugs me, and
is always biting me in the&amp;nbsp;arse. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Docker Logo" src="http://chris.scutcher.uk/images/docker.svg"&gt;&lt;/p&gt;
&lt;p&gt;In many environments, such as on a dev box or a build slave, it can be useful to
use docker to wrap a build tool, or some other one-shot app.
In other words you have some folder on your host machine that you want to modify
and update using a dockerised&amp;nbsp;app.&lt;/p&gt;
&lt;p&gt;The usually way to do this is use &lt;code&gt;--volume&lt;/code&gt; to mount in the host&amp;#8217;s directory
into the container. However this causes&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;Most dockerised apps are designed to run as root.
(There is a &lt;code&gt;--user&lt;/code&gt; flag for &lt;code&gt;docker run&lt;/code&gt; which I&amp;#8217;ll get to later but it
doesn&amp;#8217;t seem to be used all that often.)
This means that any files or folders added by the app in your volume end up
belonging to the root user, rather than the user running &lt;code&gt;docker run&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;While it&amp;#8217;s possible to compensate for this, it&amp;#8217;s awkward as hell.
I&amp;#8217;ve done a short research spike into some possible solutions and workarounds
that I&amp;#8217;ve explored in the past, or have discovered more&amp;nbsp;recently.&lt;/p&gt;
&lt;p&gt;I thought this is a good a place as any to store that research for myself and&amp;nbsp;others.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: This is really only an initial research spike so don&amp;#8217;t expect to find
all the&amp;nbsp;answers!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Using &lt;code&gt;--user&lt;/code&gt; flag with &lt;code&gt;docker run&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;This seems like the obvious answer at first. However it&amp;#8217;s not quite so perfect
as it&amp;nbsp;seems.&lt;/p&gt;
&lt;p&gt;The problem is that the docker image itself doesn&amp;#8217;t know what user id you&amp;#8217;re
going to use when you &lt;code&gt;docker run&lt;/code&gt;. So say you&amp;#8217;re uid is 1111 there will be no
entry in /etc/passwd, no home directory, nothing, unless you rebuild the docker
image and add it&amp;nbsp;there. &lt;/p&gt;
&lt;p&gt;Without /etc/passwd and other bits, many common linux commands start acting
squirely. For example python gets upset looking for site packages if there&amp;#8217;s no
home directory. 
&lt;span class="caps"&gt;SSH&lt;/span&gt; can misbehave too, even if it has a valid &lt;code&gt;$HOME&lt;/code&gt; if there is no entry in 
&lt;code&gt;/etc/passwd&lt;/code&gt; although I never got to the bottom of why. 
You really can&amp;#8217;t blame the apps for this though, it&amp;#8217;s not entirely mad to assume
that the user owning the process has a minimal footprint on the system, but it
does complicate&amp;nbsp;matters.&lt;/p&gt;
&lt;p&gt;This means you&amp;#8217;ve got to potentially rebuild your docker image for every
potential user you intend to use in &lt;code&gt;--user&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It also means that if you want to safely do &amp;#8220;root-like&amp;#8221; things, one of the big
advantages of using docker, you can&amp;#8217;t do&amp;nbsp;so.&lt;/p&gt;
&lt;h1&gt;Wrapping script inside the docker&amp;nbsp;image&lt;/h1&gt;
&lt;p&gt;You could add a script in your docker image that wraps whatever command you
intend to run with some clean up code to ensure any written files are chmodded
back to the external users&amp;nbsp;uid:gid. &lt;/p&gt;
&lt;p&gt;This works well enough, but unless every image you want to use already does it,
it will probably mean you have to create your own image for almost every image
you&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;Said script also needs to know what the external &lt;span class="caps"&gt;UID&lt;/span&gt; is, so you&amp;#8217;ve now got to
pass that into the &lt;code&gt;docker run&lt;/code&gt; command.
Then you&amp;#8217;ve got to standardise how you do this in multiple images, and chances
are you&amp;#8217;ll occasionally get something wrong and litter the volume with root&amp;nbsp;files.&lt;/p&gt;
&lt;h1&gt;Wrapping script outside the docker&amp;nbsp;image&lt;/h1&gt;
&lt;p&gt;Same principle as above, but instead of writing a script that&amp;#8217;s part of the
docker image you have a script that wraps the &lt;code&gt;docker run&lt;/code&gt; command and fixes the
files&amp;nbsp;afterwards.&lt;/p&gt;
&lt;p&gt;On the upside you no longer have to do anything special when you run docker, but
on the downside it likely wont work without using sudo which might not be&amp;nbsp;available.&lt;/p&gt;
&lt;p&gt;A colleague got around this problem by calling &lt;code&gt;docker run&lt;/code&gt; a second time to do
whatever privileged cleanup steps he needed aka docker as a sudo replacement, 
which is a pretty novel solution, but obviously completely&amp;nbsp;mad.&lt;/p&gt;
&lt;p&gt;Also, as with the previous &amp;#8216;solution&amp;#8217; things also get trickier if you want to
have multiple non-root uids in play. I think it&amp;#8217;s possible but a lot more&amp;nbsp;gnarly.&lt;/p&gt;
&lt;h1&gt;Using&amp;nbsp;bindfs&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://bindfs.org/docs/bindfs.1.html"&gt;bindfs&lt;/a&gt; can be used to bind mount one
directory in another location and map between users on one side and the&amp;nbsp;other.&lt;/p&gt;
&lt;p&gt;So for example if one had folder &lt;code&gt;/foo&lt;/code&gt; one could mount it in &lt;code&gt;/bar&lt;/code&gt; with the
option &lt;code&gt;--map=jblogs/root&lt;/code&gt;.
If there are files in &lt;code&gt;/foo&lt;/code&gt; owned by jblogs they will appear in &lt;code&gt;/bar&lt;/code&gt; as owned
by root. If new files are created by root in &lt;code&gt;/bar&lt;/code&gt; they will appear on &lt;code&gt;/foo&lt;/code&gt;
as owned by&amp;nbsp;jblogs.&lt;/p&gt;
&lt;p&gt;So rather than just adding a working directory as a volume to docker, one would
first create a bindfs mount of the working directory with a mapping and use that
mount point as the volume with &lt;code&gt;docker run&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;IMO&lt;/span&gt; this is a nicer solution than any of the above, as it still allows you to be
root inside the container, but without polluting the working&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;It has a bunch of downsides though;
&lt;em&gt; It still requires you to do some scripting around the docker
  commands to make it work cleanly. 
&lt;/em&gt; You need bindfs (or something like it) on the host system and permission to
  use it.
&lt;em&gt; Bindfs in particular is apparently dog slow so I have read
  (&lt;a href="https://github.com/docker/docker/issues/7198#issuecomment-71644946"&gt;Admittedly in a random github comment&lt;/a&gt;).
&lt;/em&gt; I&amp;#8217;m not sure how bindfs works if you try and use a user id not covered by the
  mappings. This could cause&amp;nbsp;problems.&lt;/p&gt;
&lt;h1&gt;Using &lt;code&gt;docker volume create&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;This command can be used to manually create a docker volume which can be later
mounted into the container. 
When creating this volume one seems to be able to use any of the options
normally present on the &amp;#8220;mount&amp;#8221; command. 
This presumably would allow one to use something like bindfs above but keeping
the config within docker&amp;nbsp;world. &lt;/p&gt;
&lt;p&gt;That being said, it equally shares all of the problems with the previous&amp;nbsp;approach.&lt;/p&gt;
&lt;p&gt;It is however the closest thing we&amp;#8217;ve got to an official solution to the
problem.
The bug
&lt;a href="https://github.com/docker/docker/issues/7198"&gt;Make uid &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; gid configurable for shared volumes #7198&lt;/a&gt;
was &lt;a href="https://github.com/docker/docker/issues/7198#issuecomment-191990887"&gt;closed&lt;/a&gt;
when the local volumes feature&amp;nbsp;appeared;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;You can do this by creating local volumes, it just landed in master #20262
 ... Closing this as fixed.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately how exactly local volumes could be used to achieve this was never
explained and the rest of the bug is people trying to work out what this cryptic
message meant. 
It&amp;#8217;s possible there is some way to use local volumes to achieve this affect
without bringing bindfs into the picture, but it&amp;#8217;s not obvious from my brief&amp;nbsp;investigation.&lt;/p&gt;
&lt;h1&gt;User&amp;nbsp;Namespaces&lt;/h1&gt;
&lt;p&gt;I&amp;#8217;m going to be slightly vague here because I&amp;#8217;m no expert on lxc and this
feature in&amp;nbsp;particular.&lt;/p&gt;
&lt;p&gt;User Namespaces allow a kernel level mapping between users inside and outside
the&amp;nbsp;container. &lt;/p&gt;
&lt;p&gt;So if we mapped out container to a namespace starting at 10000, the root user
(uid=0) inside the container maps to uid 10000 outside. User with uid=1 inside
maps to 10001 outside and so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Immediately its obvious how this is almost exactly what we want.
I haven&amp;#8217;t yet had a chance to try it out, but it seems like you could setup a
pretty nice&amp;nbsp;solution.&lt;/p&gt;
&lt;p&gt;To enable it&amp;#8217;s use in dockerd see
&lt;a href="https://docs.docker.com/engine/reference/commandline/dockerd/#/starting-the-daemon-with-user-namespaces-enabled"&gt;this help page&lt;/a&gt;.
Or for a more complete guide there&amp;#8217;s
&lt;a href="https://coderwall.com/p/s_ydlq/using-user-namespaces-on-docker"&gt;a good blog post here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not without it&amp;#8217;s disadvantages though;
Firstly it requires user namespaces to be compiled and enabled on the kernel.
It&amp;#8217;s not in the stock arch kernel yet, and afaik it&amp;#8217;s not in ubuntu or redhat&amp;nbsp;either. &lt;/p&gt;
&lt;p&gt;It also requires host system configuration changes including careful planning of
user id&amp;nbsp;ranges. &lt;/p&gt;
&lt;p&gt;I&amp;#8217;m also unclear on the relationship between the owning uid, the subuid and
if/how they overlap.
It may still be possible that you end up with files owned by the wrong user, but
at least it wont be&amp;nbsp;root. &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Unfortunately, I ran out of time about here so I couldn&amp;#8217;t really play with user
namespaces, but if I get the chance to do more it&amp;#8217;s probably the approach I&amp;#8217;ll
try&amp;nbsp;next.&lt;/p&gt;
&lt;p&gt;If I do I&amp;#8217;ll try and follow up with how well it&amp;nbsp;went. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other useful&amp;nbsp;links&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/docker/issues/7198"&gt;Docker bug on this&amp;nbsp;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rhelblog.redhat.com/2015/07/07/whats-next-for-containers-user-namespaces/"&gt;What’s Next for Containers? User&amp;nbsp;Namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://man7.org/linux/man-pages/man7/user_namespaces.7.html"&gt;man&amp;nbsp;user_namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/reference/commandline/dockerd/#/starting-the-daemon-with-user-namespaces-enabled"&gt;Docker help on&amp;nbsp;&amp;#8212;userns-remap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderwall.com/p/s_ydlq/using-user-namespaces-on-docker"&gt;Using User Namespaces on&amp;nbsp;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yadutaf.fr/2016/04/14/docker-for-your-users-introducing-user-namespace/"&gt;Tutorial (Docker for your&amp;nbsp;users)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="notes"></category><category term="docker"></category><category term="linux"></category><category term="lxc"></category><category term="research"></category></entry><entry><title>Why I’m a remote working fanatic</title><link href="http://chris.scutcher.uk/why-im-a-remote-working-fanatic.html" rel="alternate"></link><published>2016-08-31T17:38:39+01:00</published><updated>2016-09-04T12:21:38+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2016-08-31:/why-im-a-remote-working-fanatic.html</id><summary type="html">&lt;p&gt;I&amp;#8217;m often approached by recruiters, and in general I&amp;#8217;m always happy to listen to
potential opportunities and have a chat.
However more often than not I don&amp;#8217;t take it any further unless the organisation
has embraced remote&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I freakin&amp;#8217; love remote-working&lt;/strong&gt; and I&amp;#8217;d find it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;m often approached by recruiters, and in general I&amp;#8217;m always happy to listen to
potential opportunities and have a chat.
However more often than not I don&amp;#8217;t take it any further unless the organisation
has embraced remote&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I freakin&amp;#8217; love remote-working&lt;/strong&gt; and I&amp;#8217;d find it incredibly hard to give up.&lt;br&gt;
I&amp;#8217;ll do everything I can to make it an option for more organisations and&amp;nbsp;individuals.&lt;/p&gt;
&lt;p&gt;Just as well I work in developing telepresence and collaboration&amp;nbsp;tools!&lt;/p&gt;
&lt;p&gt;As I rant on about this a lot I&amp;#8217;ve written this post to explain why I&amp;#8217;m a
remote working&amp;nbsp;fanatic. &lt;/p&gt;
&lt;h1&gt;The obvious personal&amp;nbsp;benefits&lt;/h1&gt;
&lt;p&gt;There are obvious benefits to my personal&amp;nbsp;life.&lt;/p&gt;
&lt;p&gt;Firstly I have a huge amount of flexibility for how I structure my day.
I fundamentally believe that Engineering and Programming are creative pursuits,
and creativity suffers in a traditional rigid 9-to-5 commute-heavy grey office&amp;nbsp;environment.&lt;/p&gt;
&lt;p&gt;At home (or wherever I choose to work on a given day) I can be in my ideal
workspace; I have everything setup in the way that&amp;#8217;s most efficient for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;Having complete control over my environment extends to distractions.
We all know how painful it can be to have one&amp;#8217;s concentration broken when
working on a particularly difficult bug.
When remote working that&amp;#8217;s not an issue; if I want to blast out some Rammstein
while work then I can, if I want some silence to concentrate without
distractions then I can do that&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;I can use long periods of dead time, e.g. long compiles or test runs, to get
some chores done, or indulge in some woodwork (my current hobby of the week).
As a result I tend to work later than I would if I was in an office, but not at
the cost of my overall personal time.
Both myself and my employer benefit from this more efficient use of my&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;The lack of a commute also saves me a lot of time, money and effort, which I can
then reinvest in my work and in my personal&amp;nbsp;life.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In summary remote working allows me to work happier, harder, more efficiently
with less personal and financial&amp;nbsp;cost.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chris.scutcher.uk/images/ex-60.jpg" title="At home I use the wonderful EX60" height="200" width="200" alt="At home I use the wonderful EX60" class="fig-right"&gt;&lt;/p&gt;
&lt;h1&gt;Remote working can change the&amp;nbsp;world&lt;/h1&gt;
&lt;p&gt;Aside from the personal benefits, I genuinely believe that, if it was adopted
widely, remote working can radically change the world for the betterment of&amp;nbsp;everyone.&lt;/p&gt;
&lt;p&gt;The strain on &lt;strong&gt;transport networks&lt;/strong&gt; would be seriously reduced.
Those remote working would no longer have to waste hours of their life packed
onto overcrowded trains and roads.
Those who still have to go to their place of work for practical reasons would
have a much better time as the pressure on transport would be reduced,
especially around peak&amp;nbsp;times.&lt;/p&gt;
&lt;p&gt;This obviously also has a massive benefit for the &lt;strong&gt;environment&lt;/strong&gt;.
Apart from reducing the need to commute, normalising distributed remote working
also reduces the need for international travel for&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;There are tremendous benefits for &lt;strong&gt;family life&lt;/strong&gt; too.
Without the commute there&amp;#8217;s more time to spend with loved ones, and the
additional flexibility will help get more mothers back to work if that&amp;#8217;s their&amp;nbsp;wish.&lt;/p&gt;
&lt;p&gt;Those with &lt;strong&gt;disabilities&lt;/strong&gt;, physical or otherwise, will find it easier to enter
and thrive in the job&amp;nbsp;market. &lt;/p&gt;
&lt;p&gt;Slashing our dependence on traditional office spaces will also help tackle the
&lt;strong&gt;housing crisis&lt;/strong&gt; by freeing up more land for&amp;nbsp;homes.&lt;/p&gt;
&lt;p&gt;Not having to live close to where you work will also encourage us to spread out
a little more, so we don&amp;#8217;t all have to pack into London, 
&lt;strong&gt;revitalising the north&lt;/strong&gt; (and other areas) of the country and easing
stratospheric housing prices and strain on services in London and the&amp;nbsp;South. &lt;/p&gt;
&lt;p&gt;Internationally it could help benefit developing countries by tackling
&lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Human_capital_flight"&gt;brain drain&lt;/a&gt;&lt;/strong&gt; by allowing skilled individuals
from developing countries to live in and contribute to their home&amp;nbsp;countries. &lt;/p&gt;
&lt;p&gt;Finally, distributed working environments go further to break down the
artificial walls that separate us.
Working together across international boundaries helps us remember that we&amp;#8217;re
&lt;strong&gt;all in it together&lt;/strong&gt; and that just because someone lives on a different
continent doesn&amp;#8217;t make them less&amp;nbsp;important.&lt;/p&gt;
&lt;h1&gt;Benefits to the&amp;nbsp;employers&lt;/h1&gt;
&lt;p&gt;There are huge benefits to the employer as&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;First and foremost your employees will be happier, healthier, more creative and
more productive. 
Not only is this directly beneficial but it also makes you look like an
innovative, forward-thinking, ethical company that puts its trust in its
employees and values all the things I mention&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;Secondly, you&amp;#8217;ll find it easier to hire and retain the best employees;
the engineer with the ideal experience for your project lives in Germany - no 
problem!
Your &lt;span class="caps"&gt;QA&lt;/span&gt; lead wants to move back to Portugal to be with her family - relax!
That&amp;#8217;s aside from the fact that you&amp;#8217;ll be a lot more attractive as a place to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;Thirdly, there are obvious savings to be made by no longer paying for the
traditional office buildings and&amp;nbsp;infrastructure.&lt;/p&gt;
&lt;p&gt;Lastly, the improvements made when implementing home-working, such as better
collaboration tools and better monitoring of employee performance, will bring
tangible benefits elsewhere in your&amp;nbsp;organisations.&lt;/p&gt;
&lt;h1&gt;But what about the&amp;nbsp;downsides?&lt;/h1&gt;
&lt;p&gt;People hugely overstate the downsides of remote working. I&amp;#8217;ll tackle a few&amp;nbsp;here.&lt;/p&gt;
&lt;h2&gt;Not trusting&amp;nbsp;people&lt;/h2&gt;
&lt;p&gt;Depressingly, the most common criticism I hear goes like&amp;nbsp;this;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;If people are working from home, they&amp;#39;ll slack off.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I&amp;#8217;d respond like this: if the only way you know someone is working is because
they&amp;#8217;re sitting at their desk then you&amp;#8217;ve already lost.
Someone being physically present has literally no affect on how hard they&amp;#8217;re
working, especially in the age of facebook and smartphones.
There are plenty of ways to slack off in an office&amp;nbsp;undetected.&lt;/p&gt;
&lt;p&gt;The inability to accurately gauge an employees&amp;#8217; performance suggests, more than
anything else, poor management.
However, even if this isn&amp;#8217;t the case, how exactly is seeing bums on seats&amp;nbsp;helping?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I&amp;#8217;d say you&amp;#8217;d get more productive, efficient and enthusiastic employees by
creating a positive, trusting environment that gives feedback based on actual
performance rather than how many hours someone&amp;#8217;s been at their&amp;nbsp;desk.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Face-to-face is&amp;nbsp;everything!&amp;#8221;&lt;/h2&gt;
&lt;p&gt;Traditional, old fashioned, face-to-face communication still has its place, but
almost all of those benefits can be kept in a remote working&amp;nbsp;environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I&amp;#8217;m lucky enough to have been working primarily from home now for ~5 years and
I would say that, when it comes to communication and collaboration, remote
working is almost always as good, if not better, than being&amp;nbsp;co-located.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Telepresence technology is fantastic now. I have an
&lt;a href="https://www.cisco.com/c/en/us/support/collaboration-endpoints/telepresence-ex60/model.html"&gt;&lt;span class="caps"&gt;EX60&lt;/span&gt;&lt;/a&gt;
on my desk and use it all the time.
It&amp;#8217;s actually out of date now, but still provides a fantastic&amp;nbsp;experience.&lt;/p&gt;
&lt;p&gt;When I&amp;#8217;m in a call it&amp;#8217;s like the person I&amp;#8217;m talking to is in the room.
The audio is crystal clear, and even when I get up and walk around I can still
continue the conversation&amp;nbsp;naturally. &lt;/p&gt;
&lt;p&gt;People often think those useful &amp;#8220;over-the-shoulder&amp;#8221; conversations are
compromised with remote working. I don&amp;#8217;t believe this is the case.
Firstly, much of that can be preserved with simple tools like Slack, or Spark,
or even &lt;span class="caps"&gt;IRC&lt;/span&gt;.
Secondly, my colleagues and I often have calls or conferences open for hours at
a time, not for any particular conversation, but just for the social aspect or
to have the company, and it works&amp;nbsp;great.&lt;/p&gt;
&lt;p&gt;Other collaboration tools such as shared terminals and virtual whiteboards
often provide a better experience than the &amp;#8220;real-world&amp;#8221; equivalents. 
Buddy coding around one keyboard can be cramped and uncomfortable, but doing so
on a video call, using tmux to share the terminal, is far&amp;nbsp;superior. &lt;/p&gt;
&lt;p&gt;With more innovations on the way, in particular around &lt;span class="caps"&gt;VR&lt;/span&gt; and augmented reality,
I believe we&amp;#8217;ll see more and more ways that technology will allow us to
communicate and collaborate better than we ever could face to face.
Indeed, the best innovations will come when we fully embrace technology&amp;#8217;s
ability to allow communication in a way that&amp;#8217;s impossible with a physical
analogue.
This is something I&amp;#8217;ve been experimenting with, developing &lt;span class="caps"&gt;VR&lt;/span&gt;-based virtual
meeting spaces with the &lt;span class="caps"&gt;HTC&lt;/span&gt;&amp;nbsp;Vive. &lt;/p&gt;
&lt;p&gt;&lt;img alt="With VR the possibilities for virtual collaboration are endless)" src="http://chris.scutcher.uk/images/fantastic-contraption.gif"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;But I like going into the&amp;nbsp;office&amp;#8221;&lt;/h2&gt;
&lt;p&gt;Some people like going into the office.
They might find it difficult to work at home, or like the change of scenery, or
would miss the social&amp;nbsp;aspect. &lt;/p&gt;
&lt;p&gt;But embracing remote working doesn&amp;#8217;t have to mean you can&amp;#8217;t have that stuff if
you want it. Actually, it can make it even&amp;nbsp;better!&lt;/p&gt;
&lt;p&gt;If you don&amp;#8217;t want to work at home, remote working still opens up so many
options. Maybe you&amp;#8217;d like to work from a café or an art gallery.
How about a &lt;a href="http://en.wikipedia.org/wiki/Hackerspace"&gt;hackerspaces&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Or if you&amp;#8217;d like a more traditional space, maybe find a shared office space
(sometimes called a co-office) close to your&amp;nbsp;home.&lt;/p&gt;
&lt;p&gt;These suggestions obviously also address the social aspect, with shared offices
and hackerspaces being especially useful as they also allow people excellent
opportunities to network and learn; but outside of that the additional
flexibility that comes with remote working makes it much easier to manage one&amp;#8217;s
social life outside of work (&lt;em&gt;&lt;span class="caps"&gt;GASP&lt;/span&gt;&lt;/em&gt;). It&amp;#8217;s easier to grab lunch with an old
friend, or - now you don&amp;#8217;t have to commute - join a club, take a class, go to
the gym&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;I would also add, despite having worked from home almost exclusively, I have a
good social relationship with the colleagues in my team and we often
meet up virtually in other ways (gaming) or going to the pub for&amp;nbsp;realsies. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your working environment can be more social, more interesting, 
and more efficient. The choice is&amp;nbsp;yours.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;Remote Working is the&amp;nbsp;Future&lt;/h1&gt;
&lt;p&gt;As you can probably tell by this point, I really believe in&amp;nbsp;home-working. &lt;/p&gt;
&lt;p&gt;I won&amp;#8217;t deny that, if you don&amp;#8217;t already do it, there are challenges to
overcome in order to transition, but they can be overcome with the
technology and culture that exists today. 
The benefits will exceed any cost many times&amp;nbsp;over.&lt;/p&gt;
&lt;p&gt;I would like to ensure it continues to be an option for myself, but I also 
encourage everyone else to do whatever they can to embrace it themselves,
and in their&amp;nbsp;organisations.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d like to see the government do everything it can to encourage remote&amp;nbsp;working:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Investing in communication&amp;nbsp;networks.&lt;/li&gt;
&lt;li&gt;Encourage remote working where possible for all tax-payer funded&amp;nbsp;jobs.&lt;/li&gt;
&lt;li&gt;Incentivising companies to provide home-working options to&amp;nbsp;employers.&lt;/li&gt;
&lt;/ul&gt;</content><category term="telepresence"></category><category term="remote"></category><category term="society"></category></entry><entry><title>Why did I pick the domain name ninebysix.co.uk?</title><link href="http://chris.scutcher.uk/ninebysix.html" rel="alternate"></link><published>2015-05-01T15:40:37+01:00</published><updated>2017-03-21T12:39:53+00:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2015-05-01:/ninebysix.html</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;EDIT&lt;/span&gt;: I&amp;#8217;ve since changed domainname to avoid more of the same problems below.
Hopefully using my actual name which make this all slightly less likely in the&amp;nbsp;future!&lt;/p&gt;
&lt;p&gt;tl;dr; It&amp;#8217;s a reference to
&lt;a href="wiki&amp;gt;The_Hitchhiker%27s_Guide_to_the_Galaxy"&gt;The Hitchhiker&amp;#8217;s Guide to the&amp;nbsp;Galaxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For about 10 years now I&amp;#8217;ve …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;span class="caps"&gt;EDIT&lt;/span&gt;: I&amp;#8217;ve since changed domainname to avoid more of the same problems below.
Hopefully using my actual name which make this all slightly less likely in the&amp;nbsp;future!&lt;/p&gt;
&lt;p&gt;tl;dr; It&amp;#8217;s a reference to
&lt;a href="wiki&amp;gt;The_Hitchhiker%27s_Guide_to_the_Galaxy"&gt;The Hitchhiker&amp;#8217;s Guide to the&amp;nbsp;Galaxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For about 10 years now I&amp;#8217;ve been using the domain &lt;code&gt;ninebysix.co.uk&lt;/code&gt; as my
primary domain&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;I used to have another domain when I was a teen, but it sounded rather childish and wanted
something that was;
1.  Vague enough that there wasn&amp;#8217;t going to be competition for the domain or related assets.
2.  Vague enough people weren&amp;#8217;t going to make assumptions based on the domain name.
3.  Slightly geeky.
4.  Easy enough to read out on the&amp;nbsp;phone.&lt;/p&gt;
&lt;p&gt;Based on this I wanted &lt;code&gt;sixbynine&lt;/code&gt; in reference to 
&lt;a href="wiki&amp;gt;The_Hitchhiker%27s_Guide_to_the_Galaxy"&gt;The Hitchhiker&amp;#8217;s Guide to the Galaxy&lt;/a&gt;
where &lt;a href="wiki&amp;gt;The_Hitchhiker%27s_Guide_to_the_Galaxy"&gt;the earth computer comes up with &amp;#8220;What do you get if you multiple six by nine?&amp;#8221; as the
question for the answer &amp;#8220;42&amp;#8221;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Arthur Dent Livid&amp;quot;. Via Wikipedia - https://en.wikipedia.org/wiki/File:Arthur_Dent_Livid.jpg#/media/File:Arthur_Dent_Livid.jpg" src="http://chris.scutcher.uk/images/arthur_dent.jpg" title="Simon Jones as Arthur Dent, watching his home being demolished in the first television episode."&gt;&lt;/p&gt;
&lt;p&gt;At the time &lt;code&gt;sixbynine.co.uk&lt;/code&gt; was taken so I took &lt;code&gt;ninebysix.co.uk&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Recently similar domain names, and twitter tags have arisen which are nothing to do with me.
Annoyingly the people associated with are unfortunately slightly less professional,
and slightly more pornographic than I would want associated with my personal&amp;nbsp;webpage. &lt;/p&gt;
&lt;p&gt;I could move domains, but that seems ultimately futile (the same could happen again) and 
would be a lot of work.
Instead I&amp;#8217;m just going to hope those googling ninebysix realise I&amp;#8217;m not the same dude as the
others using the ninebysix slug, and that they find this blog&amp;nbsp;post!&lt;/p&gt;</content><category term="meta"></category><category term="web"></category><category term="personal"></category></entry><entry><title>Start google chrome with a socks proxy on linux</title><link href="http://chris.scutcher.uk/start-google-chrome-with-a-socks-proxy-on-linux.html" rel="alternate"></link><published>2015-04-28T17:49:01+01:00</published><updated>2015-04-28T18:02:53+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2015-04-28:/start-google-chrome-with-a-socks-proxy-on-linux.html</id><summary type="html">&lt;p&gt;Useful if you want to forward chrome over ssh socks&amp;nbsp;proxy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;google-chrome --proxy-server&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://localhost:6666&amp;quot;&lt;/span&gt; --host-resolver-rules&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MAP * 0.0.0.0 , EXCLUDE localhost&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Useful if you want to forward chrome over ssh socks&amp;nbsp;proxy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;google-chrome --proxy-server&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://localhost:6666&amp;quot;&lt;/span&gt; --host-resolver-rules&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MAP * 0.0.0.0 , EXCLUDE localhost&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="code"></category><category term="chrome"></category><category term="proxy"></category></entry><entry><title>How I Built This Site</title><link href="http://chris.scutcher.uk/how-i-built-this-site.html" rel="alternate"></link><published>2015-04-27T12:29:50+01:00</published><updated>2015-04-28T18:08:40+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2015-04-27:/how-i-built-this-site.html</id><summary type="html">&lt;p&gt;Main build status: &lt;a href="https://travis-ci.org/cscutcher/cscutcher.github.io.pelican"&gt;&lt;img alt="Build Status" src="https://travis-ci.org/cscutcher/cscutcher.github.io.pelican.svg?branch=master"&gt;&lt;/a&gt;&lt;br&gt;
Theme build status: &lt;a href="https://travis-ci.org/cscutcher/pure-single"&gt;&lt;img alt="Build Status" src="https://travis-ci.org/cscutcher/pure-single.svg?branch=v1.0"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A long time ago I had a webpage build with Drupal. It wasn&amp;#8217;t very good and I never really used
it properly anyway.
After a harddrive failure I couldn&amp;#8217;t be bothered to recover the thing and left it to &lt;span class="caps"&gt;RIP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Recently I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Main build status: &lt;a href="https://travis-ci.org/cscutcher/cscutcher.github.io.pelican"&gt;&lt;img alt="Build Status" src="https://travis-ci.org/cscutcher/cscutcher.github.io.pelican.svg?branch=master"&gt;&lt;/a&gt;&lt;br&gt;
Theme build status: &lt;a href="https://travis-ci.org/cscutcher/pure-single"&gt;&lt;img alt="Build Status" src="https://travis-ci.org/cscutcher/pure-single.svg?branch=v1.0"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A long time ago I had a webpage build with Drupal. It wasn&amp;#8217;t very good and I never really used
it properly anyway.
After a harddrive failure I couldn&amp;#8217;t be bothered to recover the thing and left it to &lt;span class="caps"&gt;RIP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Recently I wanted to publish a quick python tutorial I wanted somewhere to put it.
Someone suggested &lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt; for hosting and so I started some&amp;nbsp;research.&lt;/p&gt;
&lt;p&gt;This describes some of what I found out and how I constructed this page.
It&amp;#8217;s brief but I hope it&amp;#8217;ll help others who hit the same problems.
If I can help anyone else out drop me a&amp;nbsp;comment.&lt;/p&gt;
&lt;h1&gt;github.io&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt; is pretty neat.
They&amp;#8217;ll host your content for free. One pushes ones content to a &lt;a href="https://github.com"&gt;github&lt;/a&gt; repository
called &lt;code&gt;username/username.github.io&lt;/code&gt; and it&amp;#8217;ll be hosted automatically at
&lt;code&gt;https://username.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It has one limitation that I&amp;#8217;ve not in the past had to worry about; it only hosts
static content, so writing something in django or pyramid is well&amp;nbsp;out.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m awful when it comes to &lt;span class="caps"&gt;UI&lt;/span&gt; and graphick-y design type stuff, so even if it was practical,
writing raw &lt;span class="caps"&gt;HTML&lt;/span&gt; was right out. So I went on the search for a static web generation&amp;nbsp;package.&lt;/p&gt;
&lt;h1&gt;Pelican&lt;/h1&gt;
&lt;p&gt;github.io recommends &lt;a href="http://jekyllrb.com/"&gt;jekyll&lt;/a&gt;.
It looks good but I&amp;#8217;m a pythonista so it doesn&amp;#8217;t appeal to&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt; is a really handy page that allows the comparison of
the various static web generation frameworks out there.
I filtered for Python and basically picked by popularity and simplicity.
Based on this I picked &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I won&amp;#8217;t repeat the &lt;a href="http://docs.getpelican.com/en/3.5.0/"&gt;Pelican docs&lt;/a&gt;
as they are pretty comprehensive. Instead if you want to see my source for generating with pelican
&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican"&gt;it&amp;#8217;s available here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a few of the ways I&amp;#8217;ve deviated from the standard&amp;nbsp;setup;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican/blob/master/pelicanconf.py#L40"&gt;Switched on archiving by&amp;nbsp;date.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican/blob/master/pelicanconf.py#L48"&gt;Disable caching as I planned to autogenerate from an environment where I won&amp;#8217;t be able to store a cache&amp;nbsp;anyway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican/blob/master/Makefile"&gt;Modified the generated Makefile so it can push to my github.io repo. By default it pushes to a project based page which isn&amp;#8217;t what I&amp;nbsp;want&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enabled the filetime_from_git plugin and created a new plugin called&amp;nbsp;permalinks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;filetime_from_git&lt;/h2&gt;
&lt;p&gt;This handy plugin allows the creation and modification times to be extracted from the git repo
based on the first commit introducing that file rather than be manually entered for each pelican&amp;nbsp;article.&lt;/p&gt;
&lt;p&gt;I had a couple of issues with the module as things&amp;nbsp;stood;&lt;/p&gt;
&lt;p&gt;Firstly it had a dependency on some versions of the pythongit module.
Unfortunately its not so easy as installing the right pythongit version as that has a dependency
on the binary git version available on ones distro.
So I wanted to make a modification to provide some isolation from the gitpython&amp;nbsp;version.&lt;/p&gt;
&lt;p&gt;Secondly the creation and modification times were based on the filename and did not follow a file
through renames. Being the sort of person that is always changing there mind on titles and naming
schemes I wanted creation and modification to be robust to renames and so modified the plugin to&amp;nbsp;use;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git log --folow &amp;lt;filename&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to discover commits involving that&amp;nbsp;filename.&lt;/p&gt;
&lt;p&gt;These changes are in &lt;a href="https://github.com/cscutcher/pelican-plugins/commit/47269dd35b9236de7fc84fa99fb9e41c8d975c05"&gt;my private fork&lt;/a&gt;
of pelican-plugins and have now been merged to the main pelican-plugins&amp;nbsp;repo.&lt;/p&gt;
&lt;h2&gt;permalinks&lt;/h2&gt;
&lt;p&gt;I wanted to be able to generate some sort of permalink for articles that would again be
robust to&amp;nbsp;renames.&lt;/p&gt;
&lt;p&gt;I hit on the idea of using the commit sha of the original commit (again using &lt;code&gt;--follow&lt;/code&gt;)
introducing a file to be a key allowing redirection to whatever it&amp;#8217;s new path&amp;nbsp;is.&lt;/p&gt;
&lt;p&gt;To achieve this I first created a permalinks module which would create an extra file
in &lt;code&gt;/permalinks/&amp;lt;some_permalink_id&amp;gt;.html&lt;/code&gt; for each article or page on the site. This page
would redirect (using &lt;span class="caps"&gt;HTML&lt;/span&gt; refresh or javascript) to its new location. It uses whatever
arbitrary key is stored in the &lt;code&gt;permalink_id&lt;/code&gt; metadata for &lt;code&gt;some_permalink_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Obviously doing redirects this way, rather than pucker &lt;span class="caps"&gt;HTTP&lt;/span&gt; redirects is suboptimal, but it&amp;#8217;s the
only option I have given the static nature of the&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;Next I modified the filetime_from_git module to use the same mechanism for finding creation
dates to store the original commit sha as the &lt;code&gt;permalink_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also modified the theme to include this link at the bottom of each page and article for easy&amp;nbsp;access.&lt;/p&gt;
&lt;p&gt;At the moment this new plugin (and the modifications to filetime_from_git) are only on
&lt;a href="https://github.com/cscutcher/pelican-plugins/tree/permalinks"&gt;a branch of my private fork of pelican-plugins&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Theme&lt;/h1&gt;
&lt;p&gt;After looking through a few of the available themes for pelican I settled on
&lt;a href="https://github.com/PurePelicanTheme/pure-single"&gt;pure-single&lt;/a&gt; which I think looks pretty&amp;nbsp;snazzy.&lt;/p&gt;
&lt;p&gt;As I want to easily hack in modifications (as I made for permalinks) I use my &lt;a href="https://github.com/cscutcher/pure-single"&gt;own fork available
here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Apart from the permalink modification mentioned above the only other modification I&amp;#8217;ve made
so far is &lt;a href="https://github.com/cscutcher/pure-single/blob/master/templates/google.html"&gt;adding google comments to the bottom of articles and pages&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Automatic generation and push to github using&amp;nbsp;TravisCI&lt;/h1&gt;
&lt;p&gt;This site automatically gets updated when I push to either
&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican"&gt;cscutcher/cscutcher.github.io.pelican&lt;/a&gt;
or to the fork of the pure-single theme at &lt;a href="https://github.com/cscutcher/pure-single"&gt;cscutcher/pure-single&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I do this using the wonderful &lt;a href="http://travis-ci.org/"&gt;Travis &lt;span class="caps"&gt;CI&lt;/span&gt;&lt;/a&gt; service. Travis &lt;span class="caps"&gt;CI&lt;/span&gt; allows
adding a &lt;code&gt;.travis.yml&lt;/code&gt; file to any github which can describe a set of steps to get run on
each commit to&amp;nbsp;github.&lt;/p&gt;
&lt;p&gt;I use this to rebuild the site every time a commit is pushed to
&lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican"&gt;cscutcher/cscutcher.github.io.pelican&lt;/a&gt;
and then push the result to the
&lt;a href="https://github.com/cscutcher/cscutcher.github.io"&gt;cscutcher/cscutcher.github.io&lt;/a&gt;
repo hosting the&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;To see how I do this &lt;a href="https://github.com/cscutcher/cscutcher.github.io.pelican/blob/master/.travis.yml"&gt;see my &lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt;.
It took a bunch of trial an error to get working as I couldn&amp;#8217;t think of how else to experiment
with the Travis &lt;span class="caps"&gt;CI&lt;/span&gt; environment apart from pushing new commits and hoping for the&amp;nbsp;best!&lt;/p&gt;
&lt;p&gt;The most notable feature of this &lt;code&gt;.travis.yml&lt;/code&gt; is that I have to use an encrypted ssh key so that
travis can push to my repo.
This key is encrypted by travis so only travis can decrypt it, and only when building this branch
of my repo.
In short the steps&amp;nbsp;are;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate a ssh&amp;nbsp;key.&lt;/li&gt;
&lt;li&gt;Add the public key as a deployment key for the main github.io repo.
   Don&amp;#8217;t add it to your users keys as this is unnecessary extra risk!
   By adding it as deployment key you only risk one repo rather than you&amp;#8217;re whole github&amp;nbsp;account!&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="https://github.com/travis-ci/travis#readme"&gt;travis cli&lt;/a&gt; inside your repo to encrypt
   the private key and add the decryption step to your &lt;code&gt;.travis.yml&lt;/code&gt; with &lt;code&gt;travis encrypt-file --add&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Commit &lt;strong&gt;only&lt;/strong&gt; the encrypted private key and the public key to your&amp;nbsp;repo.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As I also wanted updated to my template fork to trigger updates I also had to create a &lt;code&gt;.travis.yml&lt;/code&gt;
for my fork that would trigger a rebuild of a different repo on travis.
This works by using an encrypted github api key with restricted access that is added as an encrypted
variable to the &lt;code&gt;.travis.yml&lt;/code&gt;.
I had some issues getting this to work with the standard travis cli so wrote a quick python
script to trigger the rerun for the other&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;travis.yml&lt;/code&gt; for the theme fork is &lt;a href="https://github.com/cscutcher/pure-single/blob/master/.travis.yml"&gt;here&lt;/a&gt;
and the &lt;a href="https://github.com/cscutcher/travis_restart_trigger"&gt;python script to trigger reruns is here&lt;/a&gt;.&lt;/p&gt;</content><category term="web"></category><category term="python"></category><category term="code"></category></entry><entry><title>Python Iterator Tips</title><link href="http://chris.scutcher.uk/python-iterator-tips.html" rel="alternate"></link><published>2015-04-23T15:42:30+01:00</published><updated>2015-04-27T19:25:48+01:00</updated><author><name>Chris Scutcher</name></author><id>tag:chris.scutcher.uk,2015-04-23:/python-iterator-tips.html</id><summary type="html">&lt;p&gt;Python&amp;#8217;s iterator protocol is a &lt;strong&gt;powerful&lt;/strong&gt; tool in your&amp;nbsp;arsenal.&lt;/p&gt;
&lt;p&gt;An &lt;code&gt;Iterator&lt;/code&gt; is an object that returns streams of data.
To be an iterator an instance just have to have a next() method.
Repeated calls to the iterator’s next() method return successive items in the
stream. When no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python&amp;#8217;s iterator protocol is a &lt;strong&gt;powerful&lt;/strong&gt; tool in your&amp;nbsp;arsenal.&lt;/p&gt;
&lt;p&gt;An &lt;code&gt;Iterator&lt;/code&gt; is an object that returns streams of data.
To be an iterator an instance just have to have a next() method.
Repeated calls to the iterator’s next() method return successive items in the
stream. When no more data are available a StopIteration exception is
raised instead.
As iterators preserve state, take care reusing them.
As an example, the first loop below will print 1,2,3 where as the second 
will print&amp;nbsp;nothing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An &lt;code&gt;Iterable&lt;/code&gt; is a class that can generate an &lt;code&gt;Iterator&lt;/code&gt;. For example 
list, tuples and strings are all iterable. To be an iterable a class
just has to have an &lt;strong&gt;iter&lt;/strong&gt; method that will return an iterator.
Iterables can be looped over multiple time as each time a new iter is&amp;nbsp;generated;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but once the iterator has been generated it can&amp;#8217;t be&amp;nbsp;reused.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an_iter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you&amp;#8217;re currently returning a list from a function consider instead
returning an iterator.  For&amp;nbsp;example;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Bad&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_all_lines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;all_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ALL_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;all_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;all_lines&lt;/span&gt;

&lt;span class="c1"&gt;# Better is to achieve this with a generator.&lt;/span&gt;
&lt;span class="c1"&gt;# This means calling the function below will return an iterator.&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_all_lines_iter&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ALL_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If client code wants to search the lines for string all files will be read
into memory even if the line were looking for is in the first&amp;nbsp;file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_all_lines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;SEARCH_STRING&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;         &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YAY&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;YAY&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is far more efficient as we wont go through the steps of reading
&lt;strong&gt;every&lt;/strong&gt; file and storing it in a list when its not needed.
It&amp;#8217;s more flexible too. If the client code wants a list they can&amp;nbsp;call;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;listified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_all_lines_iter&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or you might want a tuple&amp;nbsp;instead;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tuplified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_all_lines_iter&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The same applied with list&amp;nbsp;comprehensions;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Don&amp;#39;t do&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_func&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;some_other_iteratable&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Instead the following will again return an iterator&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_func&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;some_other_iteratable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Iterables can be used with the
&lt;a href="https://docs.python.org/2/library/itertools.html"&gt;itertools&lt;/a&gt; package to do
some cool things very&amp;nbsp;efficiently;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;

&lt;span class="c1"&gt;# Create some iterable objects&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Create an iterable object containing iterables&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;seq_of_seq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Chain will iterate through each iterable in turn till all iterables run out&lt;/span&gt;
&lt;span class="c1"&gt;# of items&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_iterable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq_of_seq&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="mf"&gt;0.3&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c1"&gt;# izip takes one item from each iterable on each iteration.&lt;/span&gt;
&lt;span class="c1"&gt;# It stops when the shortest iterator runs out of items.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;izip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# cycle will loop over an iterator indefinitely.&lt;/span&gt;
&lt;span class="c1"&gt;# It achieves this by caching results on first run around the iterator.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;izip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;         &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;         &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_iterable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq_of_seq&lt;/span&gt;&lt;span class="p"&gt;))):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;repr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="tips"></category><category term="programming"></category></entry></feed>